name: Build and Upload App Image

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'stage'
        type: choice
        options:
          - stage
          - prod
      apps:
        description: 'List of apps to build and deploy (as JSON array)'
        required: true
        default: '["liquidator"]'
        type: string

jobs:
  build-and-push:
    name: Build & Push ${{ matrix.app }}
    if: ${{ github.event.inputs.environment == 'stage' }}
    runs-on: ubuntu-latest-m
    strategy:
      matrix: 
        app: ${{ fromJSON(github.event.inputs.apps) }}
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v3

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_JSON }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Get short Git SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and Push Image to Stage
        run: |
          image_name=${{ matrix.app }}
          image_tag="${image_name%.Dockerfile}"
          tag="ghcr.io/${{ github.repository }}:${image_tag}"
          echo "Building $image_name.Dockerfile as $tag..."
          docker buildx build \
            --file ${{ matrix.app }}.Dockerfile \
            --tag us-central1-docker.pkg.dev/mrgn-shared/shared-artifact-registry/${{ matrix.app }}:stage \
            --tag us-central1-docker.pkg.dev/mrgn-shared/shared-artifact-registry/${{ matrix.app }}:${{ steps.vars.outputs.sha_short }} \
            --platform linux/amd64 \
            --cache-from type=registry,ref=us-central1-docker.pkg.dev/mrgn-shared/shared-artifact-registry/${{ matrix.app }}:build-cache \
            --cache-to type=registry,ref=us-central1-docker.pkg.dev/mrgn-shared/shared-artifact-registry/${{ matrix.app }}:build-cache,mode=max \
            --push \
            .

  tag-to-prod:
    name: Tag Images to Prod
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        app: ${{ fromJSON(github.event.inputs.apps) }}
      fail-fast: false
    if: ${{ github.event.inputs.environment == 'prod' }}

    steps:
      - uses: actions/checkout@v3

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_JSON }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Setup Docker Auth
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Tag Images to Prod
        run: |
          echo "Tagging ${{ matrix.app }} from stage to prod..."
          gcloud container images add-tag \
            us-central1-docker.pkg.dev/mrgn-shared/shared-artifact-registry/${{ matrix.app }}:stage \
            us-central1-docker.pkg.dev/mrgn-shared/shared-artifact-registry/${{ matrix.app }}:prod \
            --quiet    